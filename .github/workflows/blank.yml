name: AUTO-ROBOT

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # schedule:
  #    - cron: '*/5 * * * *'  # Runs every 5 minutes.

env:
  BRANCH: mm-unstable
  REPO: https://github.com/ioworker0/linux.git

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          path: robot

      - name: system resources
        run: |      
          uname -r && uname -m && echo $(nproc) && free -h
          
      - name: get the sha
        run: |   
          cd robot
          echo "sha=$(cat shazam.txt)" >> $GITHUB_ENV
          echo ${{ env.sha }}

      # - name: check against the commit ID
      #   run: |
      #     cd robot
      #     export PREVIOUS_COMMIT_ID=$(cat ${{ env.BRANCH }}_previous_commit_id.txt)
      #     export LATEST_COMMIT_ID=$(git ls-remote ${{ env.REPO }} refs/heads/${{ env.BRANCH }} | awk '{print $1}')
      #     if [ "$PREVIOUS_COMMIT_ID" = "$LATEST_COMMIT_ID" ]; then
      #       echo "Commit ID has not changed. No action needed :P"
      #       echo "condition=false" >> $GITHUB_ENV
      #     else
      #       echo $LATEST_COMMIT_ID > ${{ env.BRANCH }}_previous_commit_id.txt
      #       git config --global user.email "actions@github.com"
      #       git config --global user.name "GitHub Actions"
      #       git add ${{ env.BRANCH }}_previous_commit_id.txt
      #       git commit -m "Update previous commit ID"
      #       git push origin main
      #       echo "condition=true" >> $GITHUB_ENV
          # fi
          
      # - uses: actions/cache@v4
      #   if: env.condition == 'true'
      #   id: repo-cache
      #   with:
      #     path: .
      #     key: linux
    
      # - name: clone repo
      #   if: steps.repo-cache.outputs.cache-hit != 'true'
      #   run: |
      #     git clone -v ${{ env.REPO }} linux
          
      # - name: pre-clean up
      #   run: |
      #     cd linux
      #     git checkout master
      #     if git rev-parse --verify ${{ env.BRANCH }} >/dev/null 2>&1; then
      #       git branch -D ${{ env.BRANCH }}
      #     else
      #       echo "Branch ${{ env.BRANCH }} does not exist."
      #     fi
      #     make clean
      #     rm -rf .config*
          
      # - name: pull branch
      #   run: |
      #     cd linux && git pull && git checkout ${{ env.BRANCH }} && git pull

      - name: post-pull
        run: |
          echo ${{ env.sha }}
          sudo apt-get install python3-pip && \
          sudo apt-get install python3.10-venv && \
          sudo python3 -m venv tutorial-env && \
          source tutorial-env/bin/activate && \
          sudo pip install b4 && \
          b4 -h

      # - name: pre-build kernel arm64
      #   run: |  
      #     sudo apt-get install -y gcc-11-aarch64-linux-gnu && \
      #     sudo dpkg -L gcc-11-aarch64-linux-gnu && \
      #     sudo ln -s /usr/bin/aarch64-linux-gnu-gcc-11 /usr/bin/aarch64-linux-gnu-gcc

      # - name: build kernel arm64
      #   run: |  
      #     cd linux
      #     make ARCH=arm64 mrproper
      #     make ARCH=arm64 allnoconfig
      #     export ARCH=arm64
      #     export CROSS_COMPILE="/usr/bin/aarch64-linux-gnu-"
      #     make olddefconfig
      #     make -j$(nproc)
        
      # - name: post-build kernel arm64
      #   run: |  
      #     cd linux
      #     make clean
      #     rm -rf .config*

      # - name: pre-build kernel x86-64
      #   run: |  
      #     sudo apt-get install -y libelf-dev
       
      # - name: build kernel x86-64
      #   run: |  
      #     cd linux
      #     cp $(ls /boot/config-* | shuf -n 1) .config
      #     make olddefconfig
      #     sed -i '/^CONFIG_SYSTEM_TRUSTED_KEYS=.*/s/.*/CONFIG_SYSTEM_TRUSTED_KEYS=""/' .config
      #     sed -i '/^CONFIG_SYSTEM_REVOCATION_KEYS=.*/s/.*/CONFIG_SYSTEM_REVOCATION_KEYS=""/' .config
      #     make -j$(nproc) bzImage

      # - name: post-build kernel x86-64
      #   run: |  
      #     cd linux
      #     make clean
      #     rm -rf .config*
